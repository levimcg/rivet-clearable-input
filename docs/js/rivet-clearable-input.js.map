{"version":3,"file":"rivet-clearable-input.js","sources":["../../src/js/rivet-clearable-input.js"],"sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return factory(root);\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.ClearableInput = factory(root);\n  }\n})(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this, function (window) {\n\n  'use strict';\n\n  var CLEARABLE_ATTR = 'data-clearable';\n\n  var CLOSE_ICON = '<span class=\"rvt-sr-only\">Clear input</span>' +\n                   '<svg aria-hidden=\"true\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\">' +\n                        '<g fill=\"currentColor\">' +\n                            '<path d=\"M8,0a8,8,0,1,0,8,8A8,8,0,0,0,8,0ZM8,14a6,6,0,1,1,6-6A6,6,0,0,1,8,14Z\"/>' +\n                            '<path d=\"M10.83,5.17a1,1,0,0,0-1.41,0L8,6.59,6.59,5.17A1,1,0,0,0,5.17,6.59L6.59,8,5.17,9.41a1,1,0,1,0,1.41,1.41L8,9.41l1.41,1.41a1,1,0,0,0,1.41-1.41L9.41,8l1.41-1.41A1,1,0,0,0,10.83,5.17Z\"/>' +\n                        '</g>' +\n                    '</svg>';\n\n  /**\n   * Creates a new custom event and stores a reference\n   * to the element's ID in the custom\n   * event's options \"detail\" property.\n   *\n   * More here:\n   * https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events#Adding_custom_data_%E2%80%93_CustomEvent()\n   *\n   */\n  var _fireCustomEvent = function(element, eventName) {\n    var event = new CustomEvent(eventName, {\n      bubbles: true,\n      detail: {\n        name: function() {\n            return element.id;\n        }\n      }\n    });\n\n    // Dispatch the event\n    element.dispatchEvent(event);\n  }\n\n  /**\n   * Remove css classes from the element, clear the text, hide the button, fire the event\n   */\n  var clearInput = function(element) {\n    element.classList.remove(\"hasData\");\n    element.value = '';\n    element.focus();\n\n    //Hide the button\n    var clearButton = createOrFindButton(element);\n    clearButton.setAttribute('hidden', '');\n\n    _fireCustomEvent(element, 'inputCleared');\n  }\n\n  /**\n   * Event handler for the \"close\" button\n   */\n  var _handleClick = function(event) {\n    var clearButton = event.target;\n    \n    if (clearButton.classList.contains(\"buttonX\")) {\n      var inputId = clearButton.getAttribute(CLEARABLE_ATTR);\n      clearInput(document.getElementById(inputId));\n    }\n  }\n\n  /**\n   * Event handler for input being entered into the text box\n   */\n  var _handleInput = function(event) {\n    var clearableInput = event.target;\n    if (clearableInput.classList.contains(\"rvt-clearable-input\")) {\n      var clearButton = createOrFindButton(clearableInput);\n      //If we have content, show the button, otherwise, hide it\n      if (clearableInput.value.length > 0) {\n        clearableInput.classList.add(\"hasData\");\n        clearButton.removeAttribute('hidden');\n      } else {\n        clearableInput.classList.remove(\"hasData\");\n        clearButton.setAttribute('hidden', '');\n      }\n    }\n  }\n\n  /**\n   * Create a new button, or return the element if it already exists\n   */\n  var createOrFindButton = function(inputElement) {\n    var newButtonId = \"button_\" + inputElement.id;\n\n    //Make sure it doesn't exist already\n    var button = document.getElementById(newButtonId);\n\n    if (!button) {\n      button = document.createElement(\"button\");\n      button.type = \"button\";\n      button.setAttribute(CLEARABLE_ATTR, inputElement.id);\n      button.classList.add(\"buttonX\");\n      button.innerHTML = CLOSE_ICON;\n      button.id = newButtonId;\n      inputElement.parentNode.insertBefore(button, inputElement.nextSibling);\n    }\n\n    return button;\n  }\n  \n  var destroy = function(context) {\n    if (context === undefined) {\n      context = document;\n    }\n    \n    context.removeEventListener('click', _handleClick, false);\n    context.removeEventListener('input', _handleInput, false);\n  }\n\n  /**\n   * Adds all the event listeners to the input element(s)\n   */\n  var init = function(context) {\n    // Optional element to bind the event listeners to\n    if (context === undefined) {\n        context = document;\n    }\n\n    context.addEventListener('click', _handleClick, false);\n    context.addEventListener('input', _handleInput, false);\n  }\n\n  /**\n   * Return public APIs\n   */\n  return {\n    init: init,\n    destroy: destroy,\n    clearInput: clearInput\n  }\n});"],"names":["root","factory","define","amd","exports","module","ClearableInput","global","window","this","CLEARABLE_ATTR","CLOSE_ICON","_fireCustomEvent","element","eventName","event","CustomEvent","bubbles","detail","name","id","dispatchEvent","clearInput","classList","remove","value","focus","clearButton","createOrFindButton","setAttribute","_handleClick","target","contains","inputId","getAttribute","document","getElementById","_handleInput","clearableInput","length","add","removeAttribute","inputElement","newButtonId","button","createElement","type","innerHTML","parentNode","insertBefore","nextSibling","destroy","context","undefined","removeEventListener","init","addEventListener"],"mappings":"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"}